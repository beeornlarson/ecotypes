usethis::use_get_config(user.name = "bjorn.wilkes", user.email = "beeornlarson@gmail.com")
install.packages("usethis")
usethis::use_get_config(user.name = "bjorn.wilkes", user.email = "beeornlarson@gmail.com")
update.packages()
update.packages()
update.packages()
usethis::use_get_config(user.name = "bjorn.wilkes", user.email = "beeornlarson@gmail.com")
usethis::use_git_config(user.name = "bjorn.wilkes", user.email = "beeornlarson@gmail.com")
usethis::create_github_token()
gitcreds::gitcreds_set()
library(tidyverse)
library(lubridate)
library(plotly)
library(hms)
d <- read.csv("E:/Phenocam_Analysis/CF_CF_9-dates.csv")%>%
select(1,2,6,8)%>%
mutate(datetime = ymd_hms(substr(img, 1, 19)),
date = date(datetime),
time = parse_hms(str_replace_all(substr(img, 12, 19), " ", ":")))%>%
select('datetime', 'date', 'time', 'idx_label', 'RGB.2G_RBi', "RGB.pctG")
d_rem<- read.csv("C:/Users/ecotypes/Downloads/takeout.csv")
d1 = d%>%
filter(!idx_label %in% d_rem$Index)
d2<-d1%>%
group_by(date)%>%
summarize(median = median(RGB.2G_RBi))
d3 <- d1 %>%
right_join(d2, d1, by = 'date')%>%
mutate(resid = RGB.2G_RBi - median)%>%
d3 <- d1 %>%
right_join(d2, d1, by = 'date')%>%
mutate(resid = RGB.2G_RBi - median)
d4 = d3%>%
filter(resid < 10)%>%
filter(resid > -10)
#  filter(time > hms(00,00,07))
plot_ly(d3, x = ~datetime, y = ~(RGB.2G_RBi-mean(RGB.2G_RBi, na.rm = TRUE)), hoverinfo = "text", hovertext = paste("Date: ", d3$datetime, "<br>2G_RBi: ", d3$RGB.2G_RBi, "<br>Index: ", d3$idx_label), type = "scatter", mode = "lines+markers")%>%
layout(xaxis=list(title = "Date"), yaxis = list(title = "2G_RBi"))
z_score <- function(x) {
x <- (1:20)
z_score(x)
z_score <- function(x) {return((x-mean(x))/sd(x)}
return(z)}
return(z)}
z_score <- function(x) {z <- (x-mean(x))/sd(x)
return(z)}
x <- (1:20)
z_score(x)
joined
rates2 <- d2%>%
# mutate(X201 = X201/X153,
#       X194 = X194/X153,
#       X187 = X187/X153,
#       X180 = X180/X153,
#       X173 = X173/X153,
#       X166 = X166/X153,
#       X160 = X160/X153,
#       X153 = 1)%>%
pivot_longer(6:18, names_to = "Day", values_to = "Rate")%>%
mutate(date = floor_date(as.Date(as.numeric(substr(Day, 2,4))-1, origin = "2022-01-01")),
Loc = "CF")%>%
filter(Plot == "CF9")%>%
filter(Ind == "A")
joined <- full_join(d3, rates2, by = "date")
d2 <- read.csv("C:/Users/ecotypes/Downloads/Total Green Length - Coldfoot.csv")%>%
select(1:18)
rates2 <- d2%>%
# mutate(X201 = X201/X153,
#       X194 = X194/X153,
#       X187 = X187/X153,
#       X180 = X180/X153,
#       X173 = X173/X153,
#       X166 = X166/X153,
#       X160 = X160/X153,
#       X153 = 1)%>%
pivot_longer(6:18, names_to = "Day", values_to = "Rate")%>%
mutate(date = floor_date(as.Date(as.numeric(substr(Day, 2,4))-1, origin = "2022-01-01")),
Loc = "CF")%>%
filter(Plot == "CF9")%>%
filter(Ind == "A")
joined <- full_join(d3, rates2, by = "date")
joined
joined <- full_join(d3, rates2, by = "date")%>%
mutate(z_EG = z_score(RGB.2G_RBi),
z_GCC = z_score(RGB.pctG),
z_TGL = z_score(Rate))
joined <- full_join(d3, rates2, by = "date")%>%
mutate(z_EG = z_score(RGB.2G_RBi),
z_GCC = z_score(RGB.pctG),
z_TGL = z_score(Rate))
plot_ly(d3, x = ~datetime, y = ~z_EG), hoverinfo = "text", hovertext = paste("Date: ", d4$datetime, "<br>2G_RBi: ", d4$RGB.2G_RBi, "<br>Index: ", d4$idx_label), type = "scatter", mode = "lines+markers")%>%
plot_ly(d3, x = ~datetime, y = ~z_EG, hoverinfo = "text", hovertext = paste("Date: ", d4$datetime, "<br>2G_RBi: ", d4$RGB.2G_RBi, "<br>Index: ", d4$idx_label), type = "scatter", mode = "lines+markers")%>%
layout(xaxis=list(title = "Date"), yaxis = list(title = "2G_RBi"))
plot_ly(d3, x = ~datetime, y = ~RGB.2G_RBi, hoverinfo = "text", hovertext = paste("Date: ", d4$datetime, "<br>2G_RBi: ", d4$RGB.2G_RBi, "<br>Index: ", d4$idx_label), type = "scatter", mode = "lines+markers")%>%
layout(xaxis=list(title = "Date"), yaxis = list(title = "2G_RBi"))
plot_ly(d4, x = ~datetime, y = ~RGB.2G_RBi, hoverinfo = "text", hovertext = paste("Date: ", d4$datetime, "<br>2G_RBi: ", d4$RGB.2G_RBi, "<br>Index: ", d4$idx_label), type = "scatter", mode = "lines+markers")%>%
layout(xaxis=list(title = "Date"), yaxis = list(title = "2G_RBi"))
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC, color = "Red"))+
geom_point(aes(x = date, y = z_TGL, color = "Blue"))
z_score <- function(x) {z <- (x-mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)
return(z)}
d2 <- read.csv("C:/Users/ecotypes/Downloads/Total Green Length - Coldfoot.csv")%>%
select(1:18)
rates2 <- d2%>%
# mutate(X201 = X201/X153,
#       X194 = X194/X153,
#       X187 = X187/X153,
#       X180 = X180/X153,
#       X173 = X173/X153,
#       X166 = X166/X153,
#       X160 = X160/X153,
#       X153 = 1)%>%
pivot_longer(6:18, names_to = "Day", values_to = "Rate")%>%
mutate(date = floor_date(as.Date(as.numeric(substr(Day, 2,4))-1, origin = "2022-01-01")),
Loc = "CF")%>%
filter(Plot == "CF9")%>%
filter(Ind == "A")
joined <- full_join(d3, rates2, by = "date")%>%
mutate(z_EG = z_score(RGB.2G_RBi),
z_GCC = z_score(RGB.pctG),
z_TGL = z_score(Rate))
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC, color = "Red"))+
geom_point(aes(x = date, y = z_TGL, color = "Blue"))
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC, color = "Red"))+
geom_point(aes(x = date, y = z_TGL, color = "Blue"))
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC, color = "Blue"))+
geom_point(aes(x = date, y = z_TGL, color = "Blue"))
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC))+
geom_point(aes(x = date, y = z_TGL, ))
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC))+
geom_point(aes(x = date, y = z_TGL), color = "Blue")
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC), color = "Blue")+
geom_point(aes(x = date, y = z_TGL), color = "Red", size = 3)
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC), color = "Blue")+
geom_point(aes(x = date, y = z_TGL), color = "Red", size = 3)+
theme_bw
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC), color = "Blue")+
geom_point(aes(x = date, y = z_TGL), color = "Red", size = 3)+
theme_bw()
d
library(tidyverse)
library(lubridate)
library(plotly)
library(hms)
d <- read.csv("E:/Phenocam_Analysis/CF_CF_9-dates.csv")%>%
select(1,2,6,8)%>%
mutate(datetime = ymd_hms(substr(img, 1, 19)),
date = date(datetime),
time = parse_hms(str_replace_all(substr(img, 12, 19), " ", ":")))%>%
select('datetime', 'date', 'time', 'idx_label', 'RGB.2G_RBi', "RGB.pctG")
d_rem<- read.csv("C:/Users/ecotypes/Downloads/takeout.csv")
d1 = d%>%
filter(!idx_label %in% d_rem$Index)
d2<-d1%>%
group_by(date)%>%
summarize(median = median(RGB.2G_RBi))
d3 <- d1 %>%
right_join(d2, d1, by = 'date')%>%
mutate(resid = RGB.2G_RBi - median)
d4 = d3%>%
filter(resid < 10)%>%
filter(resid > -10)
#  filter(time > hms(00,00,07))
plot_ly(d3, x = ~datetime, y = ~(RGB.2G_RBi-mean(RGB.2G_RBi, na.rm = TRUE)), hoverinfo = "text", hovertext = paste("Date: ", d3$datetime, "<br>2G_RBi: ", d3$RGB.2G_RBi, "<br>Index: ", d3$idx_label), type = "scatter", mode = "lines+markers")%>%
layout(xaxis=list(title = "Date"), yaxis = list(title = "2G_RBi"))
z_score <- function(x) {z <- (x-mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)
return(z)}
x <- (1:20)
z_score(x)
d2 <- read.csv("C:/Users/ecotypes/Downloads/Total Green Length - Coldfoot.csv")%>%
select(1:18)
rates2 <- d2%>%
# mutate(X201 = X201/X153,
#       X194 = X194/X153,
#       X187 = X187/X153,
#       X180 = X180/X153,
#       X173 = X173/X153,
#       X166 = X166/X153,
#       X160 = X160/X153,
#       X153 = 1)%>%
pivot_longer(6:18, names_to = "Day", values_to = "Rate")%>%
mutate(date = floor_date(as.Date(as.numeric(substr(Day, 2,4))-1, origin = "2022-01-01")),
Loc = "CF")%>%
filter(Plot == "CF9")%>%
filter(Ind == "A")
joined <- full_join(d3, rates2, by = "date")%>%
mutate(z_EG = z_score(RGB.2G_RBi),
z_GCC = z_score(RGB.pctG),
z_TGL = z_score(Rate))
plot_ly(d4, x = ~datetime, y = ~RGB.2G_RBi, hoverinfo = "text", hovertext = paste("Date: ", d4$datetime, "<br>2G_RBi: ", d4$RGB.2G_RBi, "<br>Index: ", d4$idx_label), type = "scatter", mode = "lines+markers")%>%
layout(xaxis=list(title = "Date"), yaxis = list(title = "2G_RBi"))
ggplot(joined)+
geom_point(aes(x = date, y = z_EG))+
geom_point(aes(x = date, y = z_GCC), color = "Blue")+
geom_point(aes(x = date, y = z_TGL), color = "Red", size = 3)+
theme_bw()
d2 <- d%>%
mutate(datetime = floor_date(datetime, unit = "hour"),
time = as.factor(hour(datetime)))%>%
group_by(time)
summarize(d2, mean = mean(resid))
ggplot(d2, aes(y = resid, x = time))+
geom_boxplot()+
labs(y = "Distance from daily mean", x = "Time of Day")
d2
ggplot(d3, aes(x = time, y = resid))+
geom_point(alpha = 0.1)+
geom_smooth(method = "lm")+
labs(y = "Distance from daily mean", x = "Time of Day")
d2 <- d%>%
mutate(datetime = floor_date(datetime, unit = "hour"),
time = as.factor(hour(datetime)))%>%
group_by(time)
summarize(d3, mean = mean(resid))
ggplot(d2, aes(y = resid, x = time))+
geom_boxplot()+
labs(y = "Distance from daily mean", x = "Time of Day")
d2 <- d%>%
mutate(datetime = floor_date(datetime, unit = "hour"),
time = as.factor(hour(datetime)))%>%
group_by(time)
summarize(d3, mean = mean(resid))
ggplot(d3, aes(y = resid, x = time))+
geom_boxplot()+
labs(y = "Distance from daily mean", x = "Time of Day")
ggplot(d3, aes(y = resid, x = time))+
geom_point+
labs(y = "Distance from daily mean", x = "Time of Day")
ggplot(d3, aes(y = resid, x = time))+
geom_points()+
labs(y = "Distance from daily mean", x = "Time of Day")
ggplot(d3, aes(y = resid, x = time))+
geom_point()+
labs(y = "Distance from daily mean", x = "Time of Day")
ggplot(d3, aes(y = resid, group = time))+
geom_boxplot()+
labs(y = "Distance from daily mean", x = "Time of Day")
d5 <- d%>%
mutate(datetime = floor_date(datetime, unit = "hour"),
time = as.factor(hour(datetime)))%>%
group_by(time)
d5 <- d3%>%
mutate(datetime = floor_date(datetime, unit = "hour"),
time = as.factor(hour(datetime)))%>%
group_by(time)
ggplot(d5, aes(y = resid, group = time))+
geom_boxplot()+
labs(y = "Distance from daily mean", x = "Time of Day")
---
title: "Analyzing Results of Image Processing"
